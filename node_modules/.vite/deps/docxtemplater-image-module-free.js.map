{
  "version": 3,
  "sources": ["../../docxtemplater-image-module-free/js/templates.js", "../../docxtemplater-image-module-free/js/docUtils.js", "../../docxtemplater-image-module-free/js/imgManager.js", "../../docxtemplater-image-module-free/js/index.js"],
  "sourcesContent": ["\"use strict\";\n\nmodule.exports = {\n\tgetImageXml: function getImageXml(rId, size) {\n\t\treturn (\"<w:drawing>\\n\\t\\t<wp:inline distT=\\\"0\\\" distB=\\\"0\\\" distL=\\\"0\\\" distR=\\\"0\\\">\\n\\t\\t\\t<wp:extent cx=\\\"\" + size[0] + \"\\\" cy=\\\"\" + size[1] + \"\\\"/>\\n\\t\\t\\t<wp:effectExtent l=\\\"0\\\" t=\\\"0\\\" r=\\\"0\\\" b=\\\"0\\\"/>\\n\\t\\t\\t<wp:docPr id=\\\"2\\\" name=\\\"Image 2\\\" descr=\\\"image\\\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\\\"http://schemas.openxmlformats.org/drawingml/2006/main\\\" noChangeAspect=\\\"1\\\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\\\"http://schemas.openxmlformats.org/drawingml/2006/main\\\">\\n\\t\\t\\t\\t<a:graphicData uri=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\\\"0\\\" name=\\\"Picture 1\\\" descr=\\\"image\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\\\"1\\\" noChangeArrowheads=\\\"1\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\\\"rId\" + rId + \"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\\\"{28A0092B-C50C-407E-A947-70E740481C1C}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\\\"http://schemas.microsoft.com/office/drawing/2010/main\\\" val=\\\"0\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\\\"auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\\\"0\\\" y=\\\"0\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\\\"\" + size[0] + \"\\\" cy=\\\"\" + size[1] + \"\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\\\"rect\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t\").replace(/\\t|\\n/g, \"\");\n\t},\n\tgetImageXmlCentered: function getImageXmlCentered(rId, size) {\n\t\treturn (\"<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\\\"center\\\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\\\"0\\\" distB=\\\"0\\\" distL=\\\"0\\\" distR=\\\"0\\\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\\\"\" + size[0] + \"\\\" cy=\\\"\" + size[1] + \"\\\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\\\"0\\\" name=\\\"Picture\\\" descr=\\\"\\\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\\\"http://schemas.openxmlformats.org/drawingml/2006/main\\\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\\\"http://schemas.openxmlformats.org/drawingml/2006/picture\\\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\\\"0\\\" name=\\\"Picture\\\" descr=\\\"\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\\\"1\\\" noChangeArrowheads=\\\"1\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\\\"rId\" + rId + \"\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\\\"auto\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\\\"0\\\" y=\\\"0\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\\\"\" + size[0] + \"\\\" cy=\\\"\" + size[1] + \"\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\\\"rect\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\\\"9525\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\\\"800000\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t\").replace(/\\t|\\n/g, \"\");\n\t},\n\tgetPptxImageXml: function getPptxImageXml(rId, size, offset) {\n\t\treturn (\"<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\\\"6\\\" name=\\\"Picture 2\\\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\\\"1\\\" noChangeArrowheads=\\\"1\\\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\\\"rId\" + rId + \"\\\" cstate=\\\"print\\\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\\\"{28A0092B-C50C-407E-A947-70E740481C1C}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\\\"http://schemas.microsoft.com/office/drawing/2010/main\\\" val=\\\"0\\\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\\\"auto\\\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\\\"\" + offset.x + \"\\\" y=\\\"\" + offset.y + \"\\\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\\\"\" + size[0] + \"\\\" cy=\\\"\" + size[1] + \"\\\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\\\"rect\\\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\\\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\\\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\\\"http://schemas.microsoft.com/office/drawing/2010/main\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\\\"accent1\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\\\"{91240B29-F687-4F45-9708-019B960494DF}\\\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\\\"http://schemas.microsoft.com/office/drawing/2010/main\\\" w=\\\"9525\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\\\"tx1\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\\\"800000\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\\\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\\\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\\\"http://schemas.microsoft.com/office/drawing/2010/main\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\\\"35921\\\" dir=\\\"2700000\\\" algn=\\\"ctr\\\" rotWithShape=\\\"0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\\\"bg2\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t\").replace(/\\t|\\n/g, \"\");\n\t}\n};", "\"use strict\";\n\nvar DocUtils = require(\"docxtemplater\").DocUtils;\nDocUtils.convertPixelsToEmus = function (pixel) {\n\treturn Math.round(pixel * 9525);\n};\nmodule.exports = DocUtils;", "\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DocUtils = require(\"./docUtils\");\nvar extensionRegex = /[^.]+\\.([^.]+)/;\n\nvar rels = {\n\tgetPrefix: function getPrefix(fileType) {\n\t\treturn fileType === \"docx\" ? \"word\" : \"ppt\";\n\t},\n\tgetFileTypeName: function getFileTypeName(fileType) {\n\t\treturn fileType === \"docx\" ? \"document\" : \"presentation\";\n\t},\n\tgetRelsFileName: function getRelsFileName(fileName) {\n\t\treturn fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/, \"$1\") + \".xml.rels\";\n\t},\n\tgetRelsFilePath: function getRelsFilePath(fileName, fileType) {\n\t\tvar relsFileName = rels.getRelsFileName(fileName);\n\t\tvar prefix = fileType === \"pptx\" ? \"ppt/slides\" : \"word\";\n\t\treturn prefix + \"/_rels/\" + relsFileName;\n\t}\n};\n\nmodule.exports = function () {\n\tfunction ImgManager(zip, fileName, xmlDocuments, fileType) {\n\t\t_classCallCheck(this, ImgManager);\n\n\t\tthis.fileName = fileName;\n\t\tthis.prefix = rels.getPrefix(fileType);\n\t\tthis.zip = zip;\n\t\tthis.xmlDocuments = xmlDocuments;\n\t\tthis.fileTypeName = rels.getFileTypeName(fileType);\n\t\tthis.mediaPrefix = fileType === \"pptx\" ? \"../media\" : \"media\";\n\t\tvar relsFilePath = rels.getRelsFilePath(fileName, fileType);\n\t\tthis.relsDoc = xmlDocuments[relsFilePath] || this.createEmptyRelsDoc(xmlDocuments, relsFilePath);\n\t}\n\n\t_createClass(ImgManager, [{\n\t\tkey: \"createEmptyRelsDoc\",\n\t\tvalue: function createEmptyRelsDoc(xmlDocuments, relsFileName) {\n\t\t\tvar mainRels = this.prefix + \"/_rels/\" + this.fileTypeName + \".xml.rels\";\n\t\t\tvar doc = xmlDocuments[mainRels];\n\t\t\tif (!doc) {\n\t\t\t\tvar err = new Error(\"Could not copy from empty relsdoc\");\n\t\t\t\terr.properties = {\n\t\t\t\t\tmainRels: mainRels,\n\t\t\t\t\trelsFileName: relsFileName,\n\t\t\t\t\tfiles: Object.keys(this.zip.files)\n\t\t\t\t};\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tvar relsDoc = DocUtils.str2xml(DocUtils.xml2str(doc));\n\t\t\tvar relationships = relsDoc.getElementsByTagName(\"Relationships\")[0];\n\t\t\tvar relationshipChilds = relationships.getElementsByTagName(\"Relationship\");\n\t\t\tfor (var i = 0, l = relationshipChilds.length; i < l; i++) {\n\t\t\t\trelationships.removeChild(relationshipChilds[i]);\n\t\t\t}\n\t\t\txmlDocuments[relsFileName] = relsDoc;\n\t\t\treturn relsDoc;\n\t\t}\n\t}, {\n\t\tkey: \"loadImageRels\",\n\t\tvalue: function loadImageRels() {\n\t\t\tvar iterable = this.relsDoc.getElementsByTagName(\"Relationship\");\n\t\t\treturn Array.prototype.reduce.call(iterable, function (max, relationship) {\n\t\t\t\tvar id = relationship.getAttribute(\"Id\");\n\t\t\t\tif (/^rId[0-9]+$/.test(id)) {\n\t\t\t\t\treturn Math.max(max, parseInt(id.substr(3), 10));\n\t\t\t\t}\n\t\t\t\treturn max;\n\t\t\t}, 0);\n\t\t}\n\t\t// Add an extension type in the [Content_Types.xml], is used if for example you want word to be able to read png files (for every extension you add you need a contentType)\n\n\t}, {\n\t\tkey: \"addExtensionRels\",\n\t\tvalue: function addExtensionRels(contentType, extension) {\n\t\t\tvar contentTypeDoc = this.xmlDocuments[\"[Content_Types].xml\"];\n\t\t\tvar defaultTags = contentTypeDoc.getElementsByTagName(\"Default\");\n\t\t\tvar extensionRegistered = Array.prototype.some.call(defaultTags, function (tag) {\n\t\t\t\treturn tag.getAttribute(\"Extension\") === extension;\n\t\t\t});\n\t\t\tif (extensionRegistered) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar types = contentTypeDoc.getElementsByTagName(\"Types\")[0];\n\t\t\tvar newTag = contentTypeDoc.createElement(\"Default\");\n\t\t\tnewTag.namespaceURI = null;\n\t\t\tnewTag.setAttribute(\"ContentType\", contentType);\n\t\t\tnewTag.setAttribute(\"Extension\", extension);\n\t\t\ttypes.appendChild(newTag);\n\t\t}\n\t\t// Add an image and returns it's Rid\n\n\t}, {\n\t\tkey: \"addImageRels\",\n\t\tvalue: function addImageRels(imageName, imageData, i) {\n\t\t\tif (i == null) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t\tvar realImageName = i === 0 ? imageName : imageName + (\"(\" + i + \")\");\n\t\t\tvar imagePath = this.prefix + \"/media/\" + realImageName;\n\t\t\tif (this.zip.files[imagePath] != null) {\n\t\t\t\treturn this.addImageRels(imageName, imageData, i + 1);\n\t\t\t}\n\t\t\tvar image = {\n\t\t\t\tname: imagePath,\n\t\t\t\tdata: imageData,\n\t\t\t\toptions: {\n\t\t\t\t\tbinary: true\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.zip.file(image.name, image.data, image.options);\n\t\t\tvar extension = realImageName.replace(extensionRegex, \"$1\");\n\t\t\tthis.addExtensionRels(\"image/\" + extension, extension);\n\t\t\tvar relationships = this.relsDoc.getElementsByTagName(\"Relationships\")[0];\n\t\t\tvar newTag = this.relsDoc.createElement(\"Relationship\");\n\t\t\tnewTag.namespaceURI = null;\n\t\t\tvar maxRid = this.loadImageRels() + 1;\n\t\t\tnewTag.setAttribute(\"Id\", \"rId\" + maxRid);\n\t\t\tnewTag.setAttribute(\"Type\", \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");\n\t\t\tnewTag.setAttribute(\"Target\", this.mediaPrefix + \"/\" + realImageName);\n\t\t\trelationships.appendChild(newTag);\n\t\t\treturn maxRid;\n\t\t}\n\t}]);\n\n\treturn ImgManager;\n}();", "\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar templates = require(\"./templates\");\nvar DocUtils = require(\"docxtemplater\").DocUtils;\nvar DOMParser = require(\"xmldom\").DOMParser;\n\nfunction isNaN(number) {\n\treturn !(number === number);\n}\n\nvar ImgManager = require(\"./imgManager\");\nvar moduleName = \"open-xml-templating/docxtemplater-image-module\";\n\nfunction getInnerDocx(_ref) {\n\tvar part = _ref.part;\n\n\treturn part;\n}\n\nfunction getInnerPptx(_ref2) {\n\tvar part = _ref2.part,\n\t    left = _ref2.left,\n\t    right = _ref2.right,\n\t    postparsed = _ref2.postparsed;\n\n\tvar xmlString = postparsed.slice(left + 1, right).reduce(function (concat, item) {\n\t\treturn concat + item.value;\n\t}, \"\");\n\tvar xmlDoc = new DOMParser().parseFromString(\"<xml>\" + xmlString + \"</xml>\");\n\tpart.offset = { x: 0, y: 0 };\n\tpart.ext = { cx: 0, cy: 0 };\n\tvar offset = xmlDoc.getElementsByTagName(\"a:off\");\n\tvar ext = xmlDoc.getElementsByTagName(\"a:ext\");\n\tif (ext.length > 0) {\n\t\tpart.ext.cx = parseInt(ext[ext.length - 1].getAttribute(\"cx\"), 10);\n\t\tpart.ext.cy = parseInt(ext[ext.length - 1].getAttribute(\"cy\"), 10);\n\t}\n\tif (offset.length > 0) {\n\t\tpart.offset.x = parseInt(offset[offset.length - 1].getAttribute(\"x\"), 10);\n\t\tpart.offset.y = parseInt(offset[offset.length - 1].getAttribute(\"y\"), 10);\n\t}\n\treturn part;\n}\n\nvar ImageModule = function () {\n\tfunction ImageModule(options) {\n\t\t_classCallCheck(this, ImageModule);\n\n\t\tthis.name = \"ImageModule\";\n\t\tthis.options = options || {};\n\t\tthis.imgManagers = {};\n\t\tif (this.options.centered == null) {\n\t\t\tthis.options.centered = false;\n\t\t}\n\t\tif (this.options.getImage == null) {\n\t\t\tthrow new Error(\"You should pass getImage\");\n\t\t}\n\t\tif (this.options.getSize == null) {\n\t\t\tthrow new Error(\"You should pass getSize\");\n\t\t}\n\t\tthis.imageNumber = 1;\n\t}\n\n\t_createClass(ImageModule, [{\n\t\tkey: \"optionsTransformer\",\n\t\tvalue: function optionsTransformer(options, docxtemplater) {\n\t\t\tvar relsFiles = docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function (file) {\n\t\t\t\treturn file.name;\n\t\t\t});\n\t\t\tthis.fileTypeConfig = docxtemplater.fileTypeConfig;\n\t\t\tthis.fileType = docxtemplater.fileType;\n\t\t\tthis.zip = docxtemplater.zip;\n\t\t\toptions.xmlFileNames = options.xmlFileNames.concat(relsFiles);\n\t\t\treturn options;\n\t\t}\n\t}, {\n\t\tkey: \"set\",\n\t\tvalue: function set(options) {\n\t\t\tif (options.zip) {\n\t\t\t\tthis.zip = options.zip;\n\t\t\t}\n\t\t\tif (options.xmlDocuments) {\n\t\t\t\tthis.xmlDocuments = options.xmlDocuments;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"parse\",\n\t\tvalue: function parse(placeHolderContent) {\n\t\t\tvar module = moduleName;\n\t\t\tvar type = \"placeholder\";\n\t\t\tif (this.options.setParser) {\n\t\t\t\treturn this.options.setParser(placeHolderContent);\n\t\t\t}\n\t\t\tif (placeHolderContent.substring(0, 2) === \"%%\") {\n\t\t\t\treturn { type: type, value: placeHolderContent.substr(2), module: module, centered: true };\n\t\t\t}\n\t\t\tif (placeHolderContent.substring(0, 1) === \"%\") {\n\t\t\t\treturn { type: type, value: placeHolderContent.substr(1), module: module, centered: false };\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: \"postparse\",\n\t\tvalue: function postparse(parsed) {\n\t\t\tvar expandTo = void 0;\n\t\t\tvar getInner = void 0;\n\t\t\tif (this.fileType === \"pptx\") {\n\t\t\t\texpandTo = \"p:sp\";\n\t\t\t\tgetInner = getInnerPptx;\n\t\t\t} else {\n\t\t\t\texpandTo = this.options.centered ? \"w:p\" : \"w:t\";\n\t\t\t\tgetInner = getInnerDocx;\n\t\t\t}\n\t\t\treturn DocUtils.traits.expandToOne(parsed, { moduleName: moduleName, getInner: getInner, expandTo: expandTo });\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render(part, options) {\n\t\t\tif (!part.type === \"placeholder\" || part.module !== moduleName) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar tagValue = options.scopeManager.getValue(part.value, {\n\t\t\t\tpart: part\n\t\t\t});\n\t\t\tif (!tagValue) {\n\t\t\t\treturn { value: this.fileTypeConfig.tagTextXml };\n\t\t\t} else if ((typeof tagValue === \"undefined\" ? \"undefined\" : _typeof(tagValue)) === \"object\") {\n\t\t\t\treturn this.getRenderedPart(part, tagValue.rId, tagValue.sizePixel);\n\t\t\t}\n\t\t\t\n\t\t\tvar imgManager = new ImgManager(this.zip, options.filePath, this.xmlDocuments, this.fileType);\n\t\t\tvar imgBuffer = this.options.getImage(tagValue, part.value);\n\t\t\tvar rId = imgManager.addImageRels(this.getNextImageName(), imgBuffer);\n\t\t\tvar sizePixel = this.options.getSize(imgBuffer, tagValue, part.value);\n\t\t\treturn this.getRenderedPart(part, rId, sizePixel);\n\t\t}\n\t}, {\n\t\tkey: \"resolve\",\n\t\tvalue: function resolve(part, options) {\n\t\t\tvar _this = this;\n\n\t\t\tvar imgManager = new ImgManager(this.zip, options.filePath, this.xmlDocuments, this.fileType);\n\t\t\tif (!part.type === \"placeholder\" || part.module !== moduleName) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar value = options.scopeManager.getValue(part.value, {\n\t\t\t\tpart: part\n\t\t\t});\n\t\t\tif (!value) {\n\t\t\t\treturn { value: this.fileTypeConfig.tagTextXml };\n\t\t\t}\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar imgBuffer = _this.options.getImage(value, part.value);\n\t\t\t\tresolve(imgBuffer);\n\t\t\t}).then(function (imgBuffer) {\n\t\t\t\tvar rId = imgManager.addImageRels(_this.getNextImageName(), imgBuffer);\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tvar sizePixel = _this.options.getSize(imgBuffer, value, part.value);\n\t\t\t\t\tresolve(sizePixel);\n\t\t\t\t}).then(function (sizePixel) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\trId: rId,\n\t\t\t\t\t\tsizePixel: sizePixel\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"getRenderedPart\",\n\t\tvalue: function getRenderedPart(part, rId, sizePixel) {\n\t\t\tif (isNaN(rId)) {\n\t\t\t\tthrow new Error(\"rId is NaN, aborting\");\n\t\t\t}\n\t\t\tvar size = [DocUtils.convertPixelsToEmus(sizePixel[0]), DocUtils.convertPixelsToEmus(sizePixel[1])];\n\t\t\tvar centered = this.options.centered || part.centered;\n\t\t\tvar newText = void 0;\n\t\t\tif (this.fileType === \"pptx\") {\n\t\t\t\tnewText = this.getRenderedPartPptx(part, rId, size, centered);\n\t\t\t} else {\n\t\t\t\tnewText = this.getRenderedPartDocx(rId, size, centered);\n\t\t\t}\n\t\t\treturn { value: newText };\n\t\t}\n\t}, {\n\t\tkey: \"getRenderedPartPptx\",\n\t\tvalue: function getRenderedPartPptx(part, rId, size, centered) {\n\t\t\tvar offset = { x: parseInt(part.offset.x, 10), y: parseInt(part.offset.y, 10) };\n\t\t\tvar cellCX = parseInt(part.ext.cx, 10) || 1;\n\t\t\tvar cellCY = parseInt(part.ext.cy, 10) || 1;\n\t\t\tvar imgW = parseInt(size[0], 10) || 1;\n\t\t\tvar imgH = parseInt(size[1], 10) || 1;\n\t\t\tif (centered) {\n\t\t\t\toffset.x = Math.round(offset.x + cellCX / 2 - imgW / 2);\n\t\t\t\toffset.y = Math.round(offset.y + cellCY / 2 - imgH / 2);\n\t\t\t}\n\t\t\treturn templates.getPptxImageXml(rId, [imgW, imgH], offset);\n\t\t}\n\t}, {\n\t\tkey: \"getRenderedPartDocx\",\n\t\tvalue: function getRenderedPartDocx(rId, size, centered) {\n\t\t\treturn centered ? templates.getImageXmlCentered(rId, size) : templates.getImageXml(rId, size);\n\t\t}\n\t}, {\n\t\tkey: \"getNextImageName\",\n\t\tvalue: function getNextImageName() {\n\t\t\tvar name = \"image_generated_\" + this.imageNumber + \".png\";\n\t\t\tthis.imageNumber++;\n\t\t\treturn name;\n\t\t}\n\t}]);\n\n\treturn ImageModule;\n}();\n\nmodule.exports = ImageModule;"],
  "mappings": "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",
  "names": ["ImageModule", "module", "resolve"]
}
